{"version":3,"sources":["logo.svg","widgets/CodeEditor.js","App.js","reportWebVitals.js","index.js"],"names":["CodeEditor","props","height","defaultLanguage","code","defaultValue","default","theme","onChange","value","event","setItem","App","iframe","React","createRef","useState","js","setJs","css","setCss","html","setHtml","useEffect","document","current","contentWindow","documentContents","open","write","close","runCode","className","title","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kNAAe,I,mBCmBAA,MAff,SAAoBC,GAIlB,OACE,cAAC,IAAD,CACEC,OAAO,OACPC,gBAAiBF,EAAMG,KACvBC,aAAcJ,EAAMK,QACpBC,MAAM,UACNC,SATmB,SAACC,EAAOC,GACzBT,EAAMU,QAAQF,OCgEPG,MAhEf,WACE,IAAMC,EAASC,IAAMC,YACrB,EAAsBC,mBAAS,KAA/B,mBAAQC,EAAR,KAAYC,EAAZ,KACA,EAAuBF,mBAAS,KAAhC,mBAAQG,EAAR,KAAaC,EAAb,KACA,EAA2BJ,mBAAS,KAApC,mBAAQK,EAAR,KAAcC,EAAd,KAqCA,OAJAC,qBAAU,YA/BM,WAEd,IACMC,EADaX,EAAOY,QACEC,cAAcF,SACpCG,EAAgB,oTASdR,EATc,oEAahBE,EAbgB,kEAgBdJ,EAhBc,4DAsBtBO,EAASI,OACTJ,EAASK,MAAMF,GACfH,EAASM,QAITC,MAIA,qCACE,0BAASC,UAAU,aAAnB,UACE,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,gBAAf,kBACA,cAAC,EAAD,CAAY5B,KAAK,OAAOE,QAAQ,8BAAwBK,QAASW,OAEnE,sBAAKU,UAAU,uBAAf,UACE,qBAAKA,UAAU,gBAAf,iBACA,cAAC,EAAD,CAAY5B,KAAK,MAAME,QAAQ,qBAAqBK,QAASS,OAE/D,sBAAKY,UAAU,sBAAf,UACE,qBAAKA,UAAU,gBAAf,wBACA,cAAC,EAAD,CAAY5B,KAAK,aAAaE,QAAQ,kBAAkBK,QAASO,UAGrE,yBAASc,UAAU,SAAnB,SACE,wBAAQC,MAAM,SAASD,UAAU,SAASE,IAAKrB,UCpDxCsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASuB,eAAe,SAM1BZ,M","file":"static/js/main.7022cdaa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Editor from \"@monaco-editor/react\";\r\n\r\n\r\n\r\nfunction CodeEditor(props) {\r\n    const handleChange = (value, event) => {\r\n        props.setItem(value)\r\n    }\r\n  return (\r\n    <Editor\r\n      height=\"31vh\"\r\n      defaultLanguage={props.code}\r\n      defaultValue={props.default}\r\n      theme=\"vs-dark\"\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n}\r\n\r\nexport default CodeEditor;","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport CodeEditor from './widgets/CodeEditor';\n\nfunction App() {\n  const iframe = React.createRef();\n  const [ js, setJs ] = useState(' '); \n  const [ css, setCss ]= useState(' ');\n  const [ html, setHtml ]  = useState(' ');\n\n  const runCode = () => {\n\n    const iframeItem = iframe.current;\n    const document = iframeItem.contentWindow.document;\n    const documentContents = `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n        <title>Document</title>\n        <style>\n          ${css}\n        </style>\n      </head>\n      <body>\n        ${html}\n\n        <script type=\"text/javascript\">\n          ${js}\n        </script>\n      </body>\n      </html>\n    `;\n\n    document.open();\n    document.write(documentContents);\n    document.close();\n  };\n\n  useEffect(() => {\n    runCode();\n  });\n\n  return (\n    <>\n      <section className=\"playground\">\n        <div className=\"code-editor html-code\">\n          <div className=\"editor-header\">HTML</div>\n          <CodeEditor code=\"html\" default=\"<!-- some comment -->\" setItem={setHtml} />\n        </div>\n        <div className=\"code-editor css-code\">\n          <div className=\"editor-header\">CSS</div>\n          <CodeEditor code=\"css\" default=\"/* some comment */\" setItem={setCss} />\n        </div>\n        <div className=\"code-editor js-code\">\n          <div className=\"editor-header\">JAVASCRIPT</div>\n          <CodeEditor code=\"javascript\" default=\"// some comment\" setItem={setJs} />\n        </div>\n      </section>\n      <section className=\"result\">\n        <iframe title=\"result\" className=\"iframe\" ref={iframe} />      \n      </section>      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}